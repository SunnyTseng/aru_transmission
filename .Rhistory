geom_boxplot(aes(x = distance, y = confidence)) +
facet_grid(plot_type~)
aru_distance <- data_cleaned %>%
ggplot() +
geom_boxplot(aes(x = distance, y = confidence)) +
facet_grid(~plot_type )
aru_distance
aru_distance <- data_cleaned %>%
ggplot() +
geom_boxplot(aes(x = distance, y = confidence)) +
facet_grid(rows = vars(plot_type))
aru_distance
aru_distance <- data_cleaned %>%
ggplot() +
geom_boxplot(aes(x = distance, y = confidence)) +
facet_grid(rows = vars(plot_type)) +
theme_bw()
aru_distance
# filter out non-necessary data and standardize the object type.
data_clean <- data %>%
filter(distance != 0) %>%
mutate(beaufort = as_factor(beaufort),
distance = as_factor(distance),
song_exp = as_factor(song_exp)) %>%
group_by(distance, plot_type) %>%
mutate(median = median(confidence)) %>%
ungroup()
data_clean
# filter out non-necessary data and standardize the object type.
data_clean <- data %>%
filter(distance != 0) %>%
mutate(beaufort = as_factor(beaufort),
distance = as_factor(distance),
song_exp = as_factor(song_exp)) %>%
group_by(distance, plot_type) %>%
mutate(median_confidence = median(confidence)) %>%
ungroup()
data_clean
aru_distance <- data_clean %>%
ggplot() +
geom_boxplot(aes(x = distance, y = confidence)) +
geom_line(aes(x = distance, y = median_confidence))
facet_grid(rows = vars(plot_type)) +
theme_bw()
aru_distance <- data_clean %>%
ggplot() +
geom_boxplot(aes(x = distance, y = confidence)) +
geom_line(aes(x = distance, y = median_confidence)) +
facet_grid(rows = vars(plot_type)) +
theme_bw()
aru_distance
aru_distance <- data_clean %>%
ggplot() +
#geom_boxplot(aes(x = distance, y = confidence)) +
geom_line(aes(x = distance, y = median_confidence)) +
facet_grid(rows = vars(plot_type)) +
theme_bw()
aru_distance
data_clean
data_clean$ARU
data_clean$ARU %>% unique()
data_clean <- data %>%
filter(distance != 0) %>%
mutate(beaufort = as_factor(beaufort),
distance = as_factor(distance),
song_exp = as_factor(song_exp)) %>%
group_by(distance, plot_type) %>%
summarise(n = n())
# filter out non-necessary data and standardize the object type.
data_clean <- data %>%
filter(distance != 0) %>%
mutate(beaufort = as_factor(beaufort),
distance = as_factor(distance),
song_exp = as_factor(song_exp)) %>%
group_by(distance, plot_type) %>%
dplyr::summarise(n = n())
data_clean
# filter out non-necessary data and standardize the object type.
data_clean <- data %>%
filter(distance != 0) %>%
mutate(beaufort = as_factor(beaufort),
distance = as_factor(distance),
song_exp = as_factor(song_exp)) %>%
group_by(distance, plot_type) mutate(median_confidence = median(confidence)) %>%
# filter out non-necessary data and standardize the object type.
data_clean <- data %>%
filter(distance != 0) %>%
mutate(beaufort = as_factor(beaufort),
distance = as_factor(distance),
song_exp = as_factor(song_exp)) %>%
group_by(distance, plot_type) %>%
mutate(median_confidence = median(confidence)) %>%
ungroup()
data_clean
aru_distance <- data_clean %>%
ggplot() +
#geom_boxplot(aes(x = distance, y = confidence)) +
geom_line(aes(x = distance, y = median_confidence)) +
#facet_grid(rows = vars(plot_type)) +
theme_bw()
aru_distance
aru_distance <- data_clean %>%
ggplot() +
#geom_boxplot(aes(x = distance, y = confidence)) +
geom_point(aes(x = distance, y = median_confidence)) +
#facet_grid(rows = vars(plot_type)) +
theme_bw()
aru_distance
aru_distance <- data_clean %>%
ggplot() +
#geom_boxplot(aes(x = distance, y = confidence)) +
geom_point(aes(x = distance, y = median_confidence)) +
facet_grid(rows = vars(plot_type)) +
theme_bw()
aru_distance
aru_distance <- data_clean %>%
ggplot() +
#geom_boxplot(aes(x = distance, y = confidence)) +
geom_point(aes(x = distance, y = median_confidence)) +
geom_line(aes(x = distance, y = median_confidence)) +
facet_grid(rows = vars(plot_type)) +
theme_bw()
aru_distance
data_clean$median_confidence
# filter out non-necessary data and standardize the object type.
data_clean <- data %>%
filter(distance != 0) %>%
mutate(beaufort = as_factor(beaufort),
distance = as_factor(distance),
song_exp = as_factor(song_exp)) %>%
group_by(distance, plot_type) %>%
mutate(median_confidence = median(confidence)) %>%
ungroup() %>%
as_tibble()
data_clean
data_clean$median_confidence
data_clean
# filter out non-necessary data and standardize the object type.
data_clean <- data %>%
filter(distance != 0) %>%
mutate(beaufort = as_factor(beaufort),
distance = as_factor(distance),
song_exp = as_factor(song_exp)) %>%
group_by(distance, plot_type) %>%
mutate(median_confidence = median(confidence)) %>%
ungroup()
data_clean
data_clean
aru_distance <- data_clean %>%
ggplot() +
#geom_boxplot(aes(x = distance, y = confidence)) +
geom_point(aes(x = distance, y = median_confidence)) +
geom_smooth(aes(x = distance, y = median_confidence, method = "lm", se = FALSE)) +
facet_grid(rows = vars(plot_type)) +
theme_bw()
aru_distance
aru_distance <- data_clean %>%
ggplot() +
#geom_boxplot(aes(x = distance, y = confidence)) +
geom_point(aes(x = distance, y = median_confidence)) +
geom_smooth(aes(x = distance, y = median_confidence), method = "lm", se = FALSE) +
facet_grid(rows = vars(plot_type)) +
theme_bw()
aru_distance
aru_distance <- data_clean %>%
ggplot() +
#geom_boxplot(aes(x = distance, y = confidence)) +
#geom_point(aes(x = distance, y = median_confidence)) +
geom_smooth(aes(x = distance, y = median_confidence), method = "lm", se = FALSE) +
#facet_grid(rows = vars(plot_type)) +
theme_bw()
aru_distance
aru_distance <- data_clean %>%
ggplot() +
#geom_boxplot(aes(x = distance, y = confidence)) +
#geom_point(aes(x = distance, y = median_confidence)) +
geom_smooth(aes(x = distance %>% as.numeric(), y = median_confidence), method = "lm", se = FALSE) +
#facet_grid(rows = vars(plot_type)) +
theme_bw()
aru_distance
aru_distance <- data_clean %>%
ggplot() +
#geom_boxplot(aes(x = distance, y = confidence)) +
#geom_point(aes(x = distance, y = median_confidence)) +
geom_abline(lm(median_confidence ~ distance)) +
#facet_grid(rows = vars(plot_type)) +
theme_bw()
aru_distance <- data_clean %>%
ggplot() +
#geom_boxplot(aes(x = distance, y = confidence)) +
#geom_point(aes(x = distance, y = median_confidence)) +
geom_abline(lm(median_confidence ~ distance), data = data_clean) +
#facet_grid(rows = vars(plot_type)) +
theme_bw()
aru_distance <- data_clean %>%
ggplot() +
#geom_boxplot(aes(x = distance, y = confidence)) +
#geom_point(aes(x = distance, y = median_confidence)) +
geom_smooth(aes(x = distance, y = median_confidence), method = "lm", se = FALSE)
#facet_grid(rows = vars(plot_type)) +
theme_bw()
data_clean
data_clean_med <- data_clean %>%
group_by(distance, plot_type) %>%
summarize(median_confidence = median(confidence))
data_clean_med
data_clean_med <- data_clean %>%
group_by(distance, plot_type) %>%
summarize(median_confidence = median(confidence))
aru_distance <- data_clean %>%
ggplot() +
geom_boxplot(aes(x = distance, y = confidence)) +
geom_point(aes(x = distance, y = median_confidence)) +
geom_smooth(aes(x = distance, y = median_confidence), method = "lm", se = FALSE, data = data_clean_med)
facet_grid(rows = vars(plot_type)) +
theme_bw()
data_clean_med <- data_clean %>%
group_by(distance, plot_type) %>%
summarize(median_confidence = median(confidence))
aru_distance <- data_clean %>%
ggplot() +
geom_boxplot(aes(x = distance, y = confidence)) +
geom_point(aes(x = distance, y = median_confidence)) +
geom_smooth(aes(x = distance, y = median_confidence), method = "lm", se = FALSE, data = data_clean_med) +
facet_grid(rows = vars(plot_type)) +
theme_bw()
aru_distance
data_clean_med <- data_clean %>%
group_by(distance, plot_type) %>%
summarize(median_confidence = median(confidence))
aru_distance <- data_clean %>%
ggplot() +
geom_boxplot(aes(x = distance, y = confidence)) +
# geom_point(aes(x = distance, y = median_confidence)) +
geom_smooth(aes(x = distance, y = median_confidence), method = "lm", se = FALSE, data = data_clean_med) +
facet_grid(rows = vars(plot_type)) +
theme_bw()
aru_distance
mtcars
aru_distance <- data_clean %>%
ggplot() +
geom_boxplot(aes(x = distance, y = confidence)) +
# geom_point(aes(x = distance, y = median_confidence)) +
facet_grid(rows = vars(plot_type)) +
theme_bw()
aru_distance
data_clean_med <- data_clean %>%
group_by(distance, plot_type) %>%
summarize(median_confidence = median(confidence))
aru_distance <- data_clean %>%
ggplot() +
geom_boxplot(aes(x = distance, y = confidence)) +
# geom_point(aes(x = distance, y = median_confidence)) +
facet_grid(rows = vars(plot_type)) +
theme_bw() +
geom_smooth(aes(x = distance, y = median_confidence), method = "lm", se = FALSE, data = data_clean_med) +
aru_distance
data_clean_med <- data_clean %>%
group_by(distance, plot_type) %>%
summarize(median_confidence = median(confidence))
data_clean_med
coef = coef(lm(median_confidence ~ distance), data = data_clean_med)
coef = coef(lm(median_confidence ~ distance, data = data_clean_med))
coef
coef = coef(lm(median_confidence ~ distance %>% as.numeric(), data = data_clean_med))
coef
data_clean_med <- data_clean %>%
group_by(distance, plot_type) %>%
summarize(median_confidence = median(confidence)) %>%
coef(lm(median_confidence ~ distance %>% as.numeric(), data = .))
data_clean_med <- data_clean %>%
group_by(distance, plot_type) %>%
summarize(median_confidence = median(confidence))
coef(lm(median_confidence ~ distance %>% as.numeric(), data = data_clean_med))
data_clean_med <- data_clean %>%
group_by(distance, plot_type) %>%
summarize(median_confidence = median(confidence)) %>%
lm(median_confidence ~ distance %>% as.numeric(), data = .) %>%
coef()
data_clean_med
data_clean_med <- data_clean %>%
group_by(distance, plot_type) %>%
summarize(median_confidence = median(confidence))
data_clean_med
data_clean_med <- data_clean %>%
group_by(distance, plot_type) %>%
summarize(median_confidence = median(confidence)) %>%
mutate(distance = as.numeric(distance)) # in order to fit the lm, here we have 50, 75 and 100 with same interval so it is okay
data_clean_med
data_clean_med <- data_clean %>%
group_by(distance, plot_type) %>%
summarize(median_confidence = median(confidence)) %>%
mutate(distance = as.numeric(distance)) # in order to fit the lm, here we have 50, 75 and 100 with same interval so it is okay
#lm(median_confidence ~ distance %>% as.numeric(), data = .) %>%
#coef()
aru_distance <- data_clean %>%
ggplot() +
geom_boxplot(aes(x = distance, y = confidence)) +
# geom_point(aes(x = distance, y = median_confidence)) +
facet_grid(rows = vars(plot_type)) +
theme_bw() +
geom_smooth(aes(x = distance, y = median_confidence), method = "lm", se = FALSE, data = data_clean_med)
aru_distance
data_clean_med <- data_clean %>%
group_by(distance, plot_type) %>%
summarize(median_confidence = median(confidence)) %>%
mutate(distance = as.numeric(distance)) # in order to fit the lm, here we have 50, 75 and 100 with same interval so it is okay
#lm(median_confidence ~ distance %>% as.numeric(), data = .) %>%
#coef()
aru_distance <- data_clean %>%
ggplot() +
geom_boxplot(aes(x = distance, y = confidence)) +
geom_smooth(aes(x = distance, y = median_confidence), method = "lm", se = FALSE, data = data_clean_med)
# geom_point(aes(x = distance, y = median_confidence)) +
facet_grid(rows = vars(plot_type)) +
theme_bw() +
aru_distance
data_clean_med <- data_clean %>%
group_by(distance, plot_type) %>%
summarize(median_confidence = median(confidence)) %>%
mutate(distance = as.numeric(distance)) # in order to fit the lm, here we have 50, 75 and 100 with same interval so it is okay
#lm(median_confidence ~ distance %>% as.numeric(), data = .) %>%
#coef()
aru_distance <- data_clean %>%
ggplot() +
geom_boxplot(aes(x = distance, y = confidence)) +
geom_smooth(aes(x = distance, y = median_confidence), method = "lm", se = FALSE, data = data_clean_med) +
# geom_point(aes(x = distance, y = median_confidence)) +
facet_grid(rows = vars(plot_type)) +
theme_bw()
aru_distance
data_clean_med <- data_clean %>%
group_by(distance, plot_type) %>%
summarize(median_confidence = median(confidence)) %>%
mutate(distance = as.numeric(distance))
# transforming the distance to numeric in order to fit the lm,
# since 50, 75 and 100 are with the same interval so it's okay in this case.
# another method (less flexible):
# lm(median_confidence ~ distance %>% as.numeric(), data = .) %>%
# coef()
aru_distance <- data_clean %>%
ggplot() +
geom_boxplot(aes(x = distance, y = confidence)) +
geom_smooth(aes(x = distance, y = median_confidence), method = "lm", se = FALSE, data = data_clean_med) +
facet_grid(rows = vars(plot_type)) +
theme_bw()
aru_distance
data
data_clean$plot_type %>% unique()
data_clean
str(data_clean)
data_clean$direction %>% unique()
# filter out non-necessary data and standardize the object type.
# change the direction, as E & W should be marked as Side
data_clean <- data %>%
filter(distance != 0) %>%
mutate(beaufort = as_factor(beaufort),
distance = as_factor(distance),
song_exp = as_factor(song_exp)) %>%
mutate(direction = if_else(direction == "E" | direction == "W", "Side", direction))
data_clean
data_clean$direction %>% unique()
data_clean
2*3*3*3*7
1620/378
# test out each individual factor that might influence the confidence
## Factors
# ARU (2): NEW, OLD
# plot_type (3): F, C, P
# direction (3): Side, N, S
# distance (3): 50, 75, 100
## Replicates
# song_exp (7)
conf_ARU <- lmer(confidence ~ ARU + (1|beaufort), data = data_clean) # as song_exp is your replicates, you don't put it in the model
library(here)
library(tidyverse)
library(lme4)
# test out each individual factor that might influence the confidence
## Factors
# ARU (2): NEW, OLD
# plot_type (3): F, C, P
# direction (3): Side, N, S
# distance (3): 50, 75, 100
## Replicates
# song_exp (7)
conf_ARU <- lmer(confidence ~ ARU + (1|beaufort), data = data_clean) # as song_exp is your replicates, you don't put it in the model
conf_ARU
conf_ARU %>% summary()
# test out each individual factor that might influence the confidence
## Factors
# ARU (2): NEW, OLD
# plot_type (3): F, C, P
# direction (3): Side, N, S
# distance (3): 50, 75, 100
## Replicates
# song_exp (7)
conf_ARU <- lmer(confidence ~ ARU + (1|beaufort), data = data_clean) # as song_exp is your replicates, you don't put it in the model
summary(conf_ARU)
plot(conf_ARU)
# test out each individual factor that might influence the confidence
## Factors
# ARU (2): NEW, OLD
# plot_type (3): F, C, P
# direction (3): Side, N, S
# distance (3): 50, 75, 100
## Replicates
# song_exp (7)
conf_ARU <- lmer(confidence ~ ARU + (1|beaufort), data = data_clean)
summary(conf_ARU)
conf_plot_type <- lmer(confidence ~ ARU + (1|beaufort), data = data_clean)
summary(conf_plot_type)
# test out each individual factor that might influence the confidence
## Factors
# ARU (2): NEW, OLD
# plot_type (3): F, C, P
# direction (3): Side, N, S
# distance (3): 50, 75, 100
## Replicates
# song_exp (7)
conf_ARU <- lmer(confidence ~ ARU + (1|beaufort), data = data_clean)
summary(conf_ARU)
conf_plot_type <- lmer(confidence ~ plot_type + (1|beaufort), data = data_clean)
summary(conf_plot_type)
# test out each individual factor that might influence the confidence
## Factors
# ARU (2): NEW, OLD
# plot_type (3): F, C, P
# direction (3): Side, N, S
# distance (3): 50, 75, 100
## Replicates
# song_exp (7)
conf_plot_type <- lmer(confidence ~ plot_type + (1|beaufort), data = data_clean)
summary(conf_plot_type)
conf_plot_type
library(here)
library(tidyverse)
library(lme4)
library(betareg)
install.packages("betareg")
library(here)
library(tidyverse)
library(lme4)
library(betareg)
test <- betareg(confidence ~ plot_type + (1|beaufort), data = data_clean)
test <- betareg(confidence ~ plot_type , data = data_clean)
data_clean$confidence %>% range()
# filter out non-necessary data and standardize the object type.
# change the direction, as E & W should be marked as Side
data_clean <- data %>%
filter(distance != 0) %>%
mutate(beaufort = as_factor(beaufort),
distance = as_factor(distance),
song_exp = as_factor(song_exp)) %>%
mutate(direction = if_else(direction == "E" | direction == "W", "Side", direction)) %>%
mutate(confidence = if_else(confidence == 0, 0.00000001, confidence))
data_clean
# test out each individual factor that might influence the confidence
## Factors
# ARU (2): NEW, OLD
# plot_type (3): F, C, P
# direction (3): Side, N, S
# distance (3): 50, 75, 100
## Replicates
# song_exp (7)
test <- betareg(confidence ~ plot_type , data = data_clean)
conf_plot_type <- lmer(confidence ~ plot_type + (1|beaufort), data = data_clean)
summary(conf_plot_type)
test
summarise(test)
summary(test)
# test out each individual factor that might influence the confidence
## Factors
# ARU (2): NEW, OLD
# plot_type (3): F, C, P
# direction (3): Side, N, S
# distance (3): 50, 75, 100
## Replicates
# song_exp (7)
conf_ARU <- betareg(confidence ~ ARU , data = data_clean) %>%
summary
# test out each individual factor that might influence the confidence
## Factors
# ARU (2): NEW, OLD
# plot_type (3): F, C, P
# direction (3): Side, N, S
# distance (3): 50, 75, 100
## Replicates
# song_exp (7)
conf_ARU <- betareg(confidence ~ ARU , data = data_clean) %>%
summary(conf_ARU)
# test out each individual factor that might influence the confidence
## Factors
# ARU (2): NEW, OLD
# plot_type (3): F, C, P
# direction (3): Side, N, S
# distance (3): 50, 75, 100
## Replicates
# song_exp (7)
conf_ARU <- betareg(confidence ~ ARU , data = data_clean) %>%
summary(conf_ARU)
conf_ARU <- betareg(confidence ~ ARU , data = data_clean) %>%
summary(conf_ARU)
# test out each individual factor that might influence the confidence
## Factors
# ARU (2): NEW, OLD
# plot_type (3): F, C, P
# direction (3): Side, N, S
# distance (3): 50, 75, 100
## Replicates
# song_exp (7)
conf_ARU <- betareg(confidence ~ ARU , data = data_clean)
summary(conf_ARU)
